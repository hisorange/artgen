:AML:

# Defining the basic blocks of the language.
EOL = "\n" .
SPACE = " " .
WS = { /\s/ }.
LETTER =  /[a-zA-Z]/ .

# Primite types
TYPE_NAME = SYMBOL_NAME .
TYPE = "<" TYPE_NAME ">" .

# Field definition
FIELD_NAME = SYMBOL_NAME .
FIELD = WS "field" SPACE FIELD_NAME [ TYPE ] EOL .


# Message definition
MESSAGE_NAME = SYMBOL_NAME .
MESSAGE = "message" SPACE MESSAGE_NAME SPACE "{" { FIELD | WS } "}" .


# RPC definition
RPC_NAME = SYMBOL_NAME .
REQUEST = MESSAGE_NAME .
SUCCESS = MESSAGE_NAME .
ERROR = MESSAGE_NAME .
RPC = WS "rpc" SPACE RPC_NAME "(" REQUEST ")" SPACE "->" SPACE "<" ERROR "," SPACE SUCCESS ">" EOL .


# Service definition
SERVICE_NAME = SYMBOL_NAME .
SERVICE = "service" SPACE SERVICE_NAME SPACE '{' { RPC | WS } '}' .


# Comment definition
COMMENT = "#" { LETTER | SPACE } EOL .

SYMBOL_NAME = LETTER { LETTER } .

# Final grammar
SYNTAX = { SERVICE | MESSAGE | WS | COMMENT } .